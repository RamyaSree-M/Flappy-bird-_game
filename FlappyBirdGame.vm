function FlappyBirdGame.new 0
push constant 11
call Memory.alloc 1
pop pointer 0
push constant 150
pop this 4
call Scoreboard.new 0
pop this 1
push constant 10
call Array.new 1
pop this 5
push constant 0
pop this 6
push constant 100
pop this 7
push constant 0
pop this 8
push constant 1
pop this 9
push constant 0
pop this 10
push pointer 0
return
function FlappyBirdGame.displayInstructions 0
push argument 0
pop pointer 0
push constant 0
push constant 0
call Output.moveCursor 2
pop temp 0
push constant 22
call String.new 1
push constant 87
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 78
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 66
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 29
call String.new 1
push constant 84
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 106
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 44
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 13
call String.new 1
push constant 82
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 83
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 52
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 27
call String.new 1
push constant 84
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 113
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 44
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 39
call String.appendChar 2
push constant 113
call String.appendChar 2
push constant 39
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 107
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 19
call String.new 1
push constant 84
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 44
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
return
function FlappyBirdGame.run 2
push argument 0
pop pointer 0
push pointer 0
call FlappyBirdGame.initializeGameState 1
pop temp 0
push pointer 0
call FlappyBirdGame.waitForGameToStart 1
pop temp 0
push constant 32
pop local 1
label WHILE_EXP0
push local 0
push constant 81
eq
not
not
if-goto WHILE_END0
push local 0
push constant 32
eq
push local 1
push constant 32
eq
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 9
push constant 1
add
pop this 9
push this 0
call FlappyBird.moveUp 1
pop temp 0
goto IF_END0
label IF_FALSE0
push pointer 0
call FlappyBirdGame.updateBirdFallState 1
pop temp 0
push pointer 0
call FlappyBirdGame.updateBirdWingState 1
pop temp 0
label IF_END0
push pointer 0
call FlappyBirdGame.findCollision 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call FlappyBirdGame.displayScore 1
pop temp 0
push constant 3000
call Sys.wait 1
pop temp 0
push pointer 0
call FlappyBirdGame.initializeGameState 1
pop temp 0
push pointer 0
call FlappyBirdGame.waitForGameToStart 1
pop temp 0
label IF_FALSE1
push pointer 0
call FlappyBirdGame.draw 1
pop temp 0
push local 0
pop local 1
call Keyboard.keyPressed 0
pop local 0
push constant 10
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function FlappyBirdGame.waitForGameToStart 1
push argument 0
pop pointer 0
call Keyboard.keyPressed 0
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
if-goto WHILE_END0
push constant 10
call Sys.wait 1
pop temp 0
call Keyboard.keyPressed 0
pop local 0
push this 0
call FlappyBird.draw 1
pop temp 0
push pointer 0
call FlappyBirdGame.updateBirdWingState 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function FlappyBirdGame.initializeGameState 2
push argument 0
pop pointer 0
push constant 0
pop local 1
push pointer 0
call FlappyBirdGame.whiteout 1
pop temp 0
push pointer 0
call FlappyBirdGame.displayInstructions 1
pop temp 0
push this 4
call FlappyBird.new 1
pop this 0
label WHILE_EXP0
push local 1
push this 6
lt
not
if-goto WHILE_END0
push local 1
push this 5
add
pop pointer 1
push that 0
pop local 0
push local 0
call Pipe.dispose 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop this 6
push constant 0
pop this 10
push constant 1
pop this 2
push constant 1
pop this 3
push this 7
pop this 8
push constant 0
return
function FlappyBirdGame.whiteout 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push constant 0
push constant 0
push constant 511
push constant 255
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function FlappyBirdGame.displayScore 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push pointer 0
call FlappyBirdGame.calculateScore 1
pop local 0
push this 1
push local 0
call Scoreboard.draw 2
pop temp 0
push constant 0
return
function FlappyBirdGame.updateBirdFallState 0
push argument 0
pop pointer 0
push this 3
push constant 5
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call FlappyBird.moveDown 1
pop temp 0
push constant 1
pop this 3
goto IF_END0
label IF_FALSE0
push this 3
push constant 1
add
pop this 3
label IF_END0
push constant 0
return
function FlappyBirdGame.updateBirdWingState 0
push argument 0
pop pointer 0
push this 2
push constant 5
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call FlappyBird.cycleWingState 1
pop temp 0
push constant 1
pop this 2
goto IF_END0
label IF_FALSE0
push this 2
push constant 1
add
pop this 2
label IF_END0
push constant 0
return
function FlappyBirdGame.draw 1
push argument 0
pop pointer 0
push pointer 0
call FlappyBirdGame.shiftPipesLeft 1
pop temp 0
push pointer 0
call FlappyBirdGame.disposeUnseenPipe 1
pop temp 0
push pointer 0
call FlappyBirdGame.createNewPipe 1
pop temp 0
push this 0
call FlappyBird.draw 1
pop temp 0
push constant 0
return
function FlappyBirdGame.shiftPipesLeft 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 6
lt
not
if-goto WHILE_END0
push local 1
push this 5
add
pop pointer 1
push that 0
pop local 0
push local 0
call Pipe.draw 1
pop temp 0
push local 0
call Pipe.moveLeft 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function FlappyBirdGame.disposeUnseenPipe 2
push argument 0
pop pointer 0
push this 6
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 0
push this 5
add
pop pointer 1
push that 0
pop local 1
push local 1
call Pipe.getWidthCurrent 1
push constant 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
call Pipe.dispose 1
pop temp 0
push this 6
push constant 1
sub
pop this 6
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 6
lt
not
if-goto WHILE_END0
push local 0
push this 5
add
push local 0
push constant 1
add
push this 5
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE1
push constant 0
return
function FlappyBirdGame.createNewPipe 1
push argument 0
pop pointer 0
push this 8
push this 7
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 6
push this 5
add
push this 9
call Pipe.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 6
push constant 1
add
pop this 6
push this 10
push constant 1
add
pop this 10
push constant 0
pop this 8
goto IF_END0
label IF_FALSE0
push constant 0
push this 5
add
pop pointer 1
push that 0
pop local 0
push this 8
push local 0
call Pipe.getWidthIncrement 1
add
pop this 8
label IF_END0
push constant 0
return
function FlappyBirdGame.calculateScore 3
push argument 0
pop pointer 0
push this 10
pop local 2
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 6
lt
not
if-goto WHILE_END0
push local 1
push this 5
add
pop pointer 1
push that 0
pop local 0
push this 0
call FlappyBird.getXOffset 1
push local 0
call Pipe.getXOffset 1
push local 0
call Pipe.getWidthCurrent 1
add
push constant 1
add
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push constant 1
sub
pop local 2
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function FlappyBirdGame.findCollision 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 6
lt
not
if-goto WHILE_END0
push local 1
push this 5
add
pop pointer 1
push that 0
pop local 0
push pointer 0
push local 0
call FlappyBirdGame.collides 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function FlappyBirdGame.collides 0
push argument 0
pop pointer 0
push this 0
call FlappyBird.getYOffset 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push this 0
call FlappyBird.getYOffset 1
push this 0
call FlappyBird.getSizeY 1
add
push constant 255
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
push argument 1
call Pipe.getXOffset 1
push this 0
call FlappyBird.getXOffset 1
push this 0
call FlappyBird.getSizeX 1
add
push constant 1
add
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
return
label IF_FALSE2
push argument 1
call Pipe.getXOffset 1
push argument 1
call Pipe.getWidthCurrent 1
add
push this 0
call FlappyBird.getXOffset 1
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
return
label IF_FALSE3
push argument 1
call Pipe.getGapTop 1
push this 0
call FlappyBird.getYOffset 1
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
return
label IF_FALSE4
push argument 1
call Pipe.getGapBottom 1
push this 0
call FlappyBird.getYOffset 1
push this 0
call FlappyBird.getSizeY 1
add
lt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
return
label IF_FALSE5
push constant 0
return
function FlappyBirdGame.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 6
lt
not
if-goto WHILE_END0
push local 1
push this 5
add
pop pointer 1
push that 0
pop local 0
push local 0
call Pipe.dispose 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push this 1
call Scoreboard.dispose 1
pop temp 0
push this 0
call FlappyBird.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
